name: Toggle Maintenance Mode

on:
  workflow_dispatch:
    inputs:
      maintenance_mode:
        description: 'Enable maintenance mode'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      reason:
        description: 'Reason for maintenance (optional)'
        required: false
        default: 'Scheduled maintenance'

jobs:
  toggle-maintenance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Update maintenance mode in config
      run: |
        # Update _config.yml
        if [ "${{ github.event.inputs.maintenance_mode }}" = "true" ]; then
          echo "🚧 Activating maintenance mode..."
          sed -i 's/maintenance_mode: false/maintenance_mode: true/' _config.yml
        else
          echo "✅ Disabling maintenance mode..."
          sed -i 's/maintenance_mode: true/maintenance_mode: false/' _config.yml
        fi
        
        # Verify change
        echo "Current maintenance_mode setting:"
        grep "maintenance_mode:" _config.yml
    
    - name: Update JavaScript maintenance check
      run: |
        # Update the MAINTENANCE_MODE constant in the JS file
        if [ "${{ github.event.inputs.maintenance_mode }}" = "true" ]; then
          echo "🚧 Setting JavaScript maintenance mode to true..."
          sed -i 's/const MAINTENANCE_MODE = false/const MAINTENANCE_MODE = true/' assets/js/maintenance-check.js
        else
          echo "✅ Setting JavaScript maintenance mode to false..."
          sed -i 's/const MAINTENANCE_MODE = true/const MAINTENANCE_MODE = false/' assets/js/maintenance-check.js
        fi
        
        # Verify change
        echo "Current MAINTENANCE_MODE setting:"
        grep "const MAINTENANCE_MODE" assets/js/maintenance-check.js
    
    - name: Create maintenance log entry
      run: |
        echo "$(date): Maintenance mode set to ${{ github.event.inputs.maintenance_mode }}" >> maintenance.log
        if [ ! -z "${{ github.event.inputs.reason }}" ]; then
          echo "Reason: ${{ github.event.inputs.reason }}" >> maintenance.log
        fi
        echo "Triggered by: ${{ github.actor }}" >> maintenance.log
        echo "---" >> maintenance.log
    
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ "${{ github.event.inputs.maintenance_mode }}" = "true" ]; then
          git add _config.yml assets/js/maintenance-check.js maintenance.log
          git commit -m "🚧 Enable maintenance mode
          
          Reason: ${{ github.event.inputs.reason }}
          Triggered by: ${{ github.actor }}
          
          - Updated _config.yml maintenance_mode to true
          - Updated JavaScript MAINTENANCE_MODE constant
          - Site will show maintenance page for non-authorized IPs"
        else
          git add _config.yml assets/js/maintenance-check.js maintenance.log
          git commit -m "✅ Disable maintenance mode
          
          Triggered by: ${{ github.actor }}
          
          - Updated _config.yml maintenance_mode to false  
          - Updated JavaScript MAINTENANCE_MODE constant
          - Site is now publicly accessible"
        fi
    
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
    
    - name: Wait for deployment
      run: |
        echo "⏳ Waiting for GitHub Pages deployment..."
        sleep 30
    
    - name: Verify deployment
      run: |
        if [ "${{ github.event.inputs.maintenance_mode }}" = "true" ]; then
          echo "🚧 Maintenance mode activated!"
          echo "✅ Authorized IP (109.210.10.225) can still access the site"
          echo "❌ Other visitors will see the maintenance page"
        else
          echo "✅ Maintenance mode disabled!"
          echo "✅ Site is now publicly accessible"
        fi
        
        echo ""
        echo "🔗 Site URL: https://ndabene.github.io"
        echo "🔗 Maintenance page: https://ndabene.github.io/maintenance/"
        
    - name: Create deployment summary
      run: |
        echo "## Maintenance Mode Toggle Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** $([ "${{ github.event.inputs.maintenance_mode }}" = "true" ] && echo "🚧 Maintenance ENABLED" || echo "✅ Maintenance DISABLED")" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
        
        if [ ! -z "${{ github.event.inputs.reason }}" ]; then
          echo "**Reason:** ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Configuration Updated:" >> $GITHUB_STEP_SUMMARY
        echo "- \`_config.yml\` maintenance_mode: \`${{ github.event.inputs.maintenance_mode }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`assets/js/maintenance-check.js\` MAINTENANCE_MODE: \`${{ github.event.inputs.maintenance_mode }}\`" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Access Information:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.maintenance_mode }}" = "true" ]; then
          echo "- ✅ **Authorized IP:** 109.210.10.225 (full site access)" >> $GITHUB_STEP_SUMMARY
          echo "- 🚧 **Other visitors:** Redirected to maintenance page" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 **Maintenance page:** https://ndabene.github.io/maintenance/" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ✅ **All visitors:** Full site access" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 **Site URL:** https://ndabene.github.io" >> $GITHUB_STEP_SUMMARY
        fi